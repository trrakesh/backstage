app:
  title: Scaffolded Backstage App
  baseUrl: http://localhost:3000

organization:
  name: My Company

backend:
  # Used for enabling authentication, secret is shared by all backend plugins
  # See https://backstage.io/docs/auth/service-to-service-auth for

  baseUrl: http://localhost:7007
  listen:
    port: 7007
    # Uncomment the following host directive to bind to specific interfaces
    # host: 127.0.0.1
  csp:
    connect-src: ["'self'", 'http:', 'https:']
    # Content-Security-Policy directives follow the Helmet format: https://helmetjs.github.io/#reference
    # Default Helmet Content-Security-Policy values can be removed by setting the key to false
  cors:
    origin: http://localhost:3000
    methods: [GET, HEAD, PATCH, POST, PUT, DELETE]
    credentials: true
  # This is for local development only, it is not recommended to use this in production
  # The production database configuration is stored in app-config.production.yaml
  database:
    # client: better-sqlite3
    # connection: ':memory:'
    client: pg
    connection:
      host: localhost
      port: 5432
      user: postgres
      password: postgres
  # workingDirectory: /tmp # Use this to configure a working directory for the scaffolder, defaults to the OS temp-dir

integrations:
  github:
    - host: github.com
      # This is a Personal Access Token or PAT from GitHub. You can find out how to generate this token, and more information
      # about setting up the GitHub integration here: https://backstage.io/docs/getting-started/configuration#setting-up-a-github-integration
      token: ${GITHUB_TOKEN}
    ### Example for how to add your GitHub Enterprise instance using the API:
    # - host: ghe.example.net
    #   apiBaseUrl: https://ghe.example.net/api/v3
    #   token: ${GHE_TOKEN}

proxy:
  ### Example for how to add a proxy endpoint for the frontend.
  ### A typical reason to do this is to handle HTTPS and CORS for internal services.
  # endpoints:
  #   '/test':
  #     target: 'https://example.com'
  #     changeOrigin: true

# Reference documentation http://backstage.io/docs/features/techdocs/configuration
# Note: After experimenting with basic setup, use CI/CD to generate docs
# and an external cloud storage when deploying TechDocs for production use-case.
# https://backstage.io/docs/features/techdocs/how-to-guides#how-to-migrate-from-techdocs-basic-to-recommended-deployment-approach
techdocs:
  builder: 'local' # Alternatives - 'external'
  generator:
    runIn: 'docker' # Alternatives - 'local'
  publisher:
    type: 'local' # Alternatives - 'googleGcs' or 'awsS3'. Read documentation for using alternatives.

scaffolder:
  # see https://backstage.io/docs/features/software-templates/configuration for software template options

auth:
  ### Add auth.keyStore.provider to more granularly control how to store JWK data when running
  # the auth-backend.
  #
  # keyStore:
  #  provider: firestore
  #  firestore:
  #    projectId: my-project
  #    path: my-sessions

  environment: development
  ### Providing an auth.session.secret will enable session support in the auth-backend
  # session:
  #   secret: custom session secret
  providers:
    custom:
      cookies:
        secure: false # https cookies or not
        field: 'backstage-token-custom' # default
    # ldap:
    #   development:
    #     cookies:
    #       secure: false # https cookies or not
    #       field: 'backstage-token' # default
    #     ldapAuthenticationOptions:
    #       userSearchBase: 'ou=People,dc=example,dc=com' # REQUIRED
    #       usernameAttribute: 'uid' # defaults to `uid`
    #       adminDn: cn=admin,dc=example,dc=com
    #       adminPassword: 'Eadmed@123'
    #       ldapOpts:
    #         url:
    #           - 'ldap://57.180.241.191:389'
    #         tlsOptions:
    #           rejectUnauthorized: false
catalog:
  import:
    entityFilename: catalog-info.yaml
    pullRequestBranchName: backstage-integration
  rules:
    - allow: [Component, System, API, Resource, Location, Product]
  # processors:
  #   ldapOrg:
  #     ## Example for how to add your enterprise LDAP server
  #     providers:
  #       - target: ldap://57.180.241.191:389
  #         bind:
  #           dn: cn=admin,dc=example,dc=com
  #           secret: Eadmed@123
  #         users:
  #           dn: ou=People,dc=example,dc=com
  #         groups:
  #           dn: ou=Groups,dc=example,dc=com
            # options:
            #   filter: (&(objectClass=some-group-class)(!(groupType=email)))
  locations:
    # Local example data, file locations are relative to the backend process, typically `packages/backend`
    - type: file
      target: ../../examples/entities.yaml

    # Local example template
    - type: file
      target: ../../examples/template/template.yaml
      rules:
        - allow: [Template]

    # Local example organizational data
    # - type: ldap-org
    #   target: ldap://57.180.241.191:389
    #   rules:
    #     - allow: [User, Group]

    ## Uncomment these lines to add more example data
    # - type: url
    #   target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/all.yaml

    ## Uncomment these lines to add an example org
    # - type: url
    #   target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/acme-corp.yaml
    #   rules:
    #     - allow: [User, Group]

customUI:
  columns:
    - title: Modality
      field: modality
      filter: true
    - title: Body Parts
      field: bodyParts
      filter: true
    - title: Processing Purpose
      field: processingPurpose
      filter: true
    - title: Protocol
      field: protocol
      filter: true
    - title: Algorithm Type
      field: algorithmType
      filter: true
    - title: Package Type
      field: packageType
      filter: true
    - title: Supported OS
      field: supportedOs
      filter: true
    - title: Source Code Language
      field: sourceCodeLanguage
      filter: true
    - title: Development Status
      field: developmentStatus
      filter: true
    - title: Body Parts
      field: bodyParts
      filter: true
    - title: Information Author
      field: informationAuthor
      filter: true